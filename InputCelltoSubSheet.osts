{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook) {\n  // Get the currently active cell\n  const activeCell = workbook.getActiveCell();\n  const allSheets = workbook.getWorksheets();\n\n  // Get the active sheet (assuming it's the overall sheet)\n  const overallSheet = activeCell.getWorksheet();\n\n  // Get the row and column of the active cell\n  const row = activeCell.getRowIndex();\n  const col = activeCell.getColumnIndex();\n\n  // Get the value of the active cell (sheet name)\n  const sheetName = activeCell.getText();\n\n  if (!sheetName) {\n    throw new Error(\"The selected cell is empty. Please provide a valid sheet name.\");\n  }\n\n  // Check if the sheet exists\n  var targetSheet = workbook.getWorksheet(sheetName);\n \n  if (!targetSheet){\n   \n    const copytargetCell = overallSheet.getCell((row - 1), col).getText();\n    const sourceSheet = workbook.getWorksheet(copytargetCell);\n    const newSheet = sourceSheet.copy();\n    // Rename the duplicated sheet\n    newSheet.setName(sheetName);\n    targetSheet = newSheet\n    const sourceSheetIndex = allSheets.findIndex(sheet => sheet.getName() === copytargetCell);\n    if (sourceSheetIndex === -1) {\n      throw new Error(`Failed to locate the position of the sheet \"${sheetName}\".`);\n    }\n    newSheet.setPosition(sourceSheetIndex+1);\n  }\n\n  // Copy data from the overall sheet to the target sheet\n  const copyMapping: { sourceCol: number; targetCell: string }[] = [\n    { sourceCol: 0, targetCell: \"B12\" },\n    { sourceCol: 1, targetCell: \"B14\" }, // Column B to B14\n    { sourceCol: 2, targetCell: \"B20\" }, // Column C to B20\n    { sourceCol: 3, targetCell: \"B22\" }, // Column D to B22\n    { sourceCol: 4, targetCell: \"B24\" }, // Column E to B24\n    { sourceCol: 5, targetCell: \"B26\" }, // Column F to B26\n  ];\n\n \n\n  copyMapping.forEach(mapping => {\n    const sourceCell = overallSheet.getCell(row, mapping.sourceCol);\n    const targetCell = targetSheet.getRange(mapping.targetCell);\n    targetCell.setValue(sourceCell.getValue());\n  });\n\n  const cellsToClear = [\"B16\", \"B18\", \"B30\", \"B32\", \"H30\"];\n  cellsToClear.forEach(cellAddress => {\n    const CLEARcell = targetSheet.getRange(cellAddress);\n    CLEARcell.setValue(\"\");\n  });\n\n  // Notify the user\n  console.log(`Data has been successfully transferred to sheet: ${sheetName}`);\n}\n","description":"","noCodeMetadata":null,"parameterInfo":"{\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}