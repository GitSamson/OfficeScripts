{"version":"0.3.0","body":"function main(workbook: ExcelScript.Workbook) {\n  // Get the currently active cell\n  const activeCell = workbook.getActiveCell();\n  const allSheets = workbook.getWorksheets();\n\n  // Get the active sheet (assuming it's the overall sheet)\n  const overallSheet = activeCell.getWorksheet();\n\n  // Get the row and column of the active cell\n  const row = activeCell.getRowIndex();\n  const col = activeCell.getColumnIndex();\n\n  // Get the value of the active cell (sheet name)\n  const sheetName = activeCell.getText();\n\n  if (!sheetName) {\n    const indexSheet = workbook.getWorksheet(\"INDEX\");\n    if (sheetName==\"\") {\n      indexSheet.activate();\n      console.log(\"Cell content is empty. Switched to the INDEX sheet.\");\n      return;\n    } else {\n      let templateSheet = workbook.getWorksheet(\"TEMPLATE\");\n      // Duplicate the template sheet\n      let newSheet = templateSheet.copy();\n      newSheet.setName(sheetName);\n    }\n  }\n\n  // Check if the sheet exists\n  var targetSheet = workbook.getWorksheet(sheetName);\n\n  // Copy data from the overall sheet to the target sheet\n  const copyMapping: { sourceCol: number; targetCell: string }[] = [\n    { sourceCol: 6, targetCell: \"B20\" }, // Column C to B20 LOCATION\n  ];\n\n \n\n  copyMapping.forEach(mapping => {\n    const sourceCell = overallSheet.getCell(row, mapping.sourceCol);\n    const targetCell = targetSheet.getRange(mapping.targetCell);\n    targetCell.setValue(sourceCell.getValue());\n  });\n\n  const cellsToClear = [\"B16\", \"B18\", \"B30\", \"B32\", \"H30\"];\n  cellsToClear.forEach(cellAddress => {\n    const CLEARcell = targetSheet.getRange(cellAddress);\n    CLEARcell.setValue(\"\");\n  });\n\n  // Notify the user\n  console.log(`Data has been successfully transferred to sheet: ${sheetName}`);\n}\n","description":"","noCodeMetadata":null,"parameterInfo":"{\"originalParameterOrder\":[],\"parameterSchema\":{\"type\":\"object\",\"default\":{},\"x-ms-visibility\":\"internal\"},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}